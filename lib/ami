# -*- mode: sh; eval: (sh-set-shell "bash") -*-

# and this is supposed to be simple?
[ -v AMI_LIBL_AMI ] && return;
AMI_LIBL_AMI=1
# load config
AMI_CONF="$AMI_MDIR/etc/ami"
[ -f "$AMI_CONF" ] && . "$AMI_CONF" "$AMI_CONF" || { echo "$AMI_PROG: no $AMI_CONF config file found" >&2; exit 1; }
# library dir, autorelatife... like in $AMI_ETCD/ami
export AMI_LIBD=$(dirname $1)

# the usual: die msg [status]
function die() {
	local s=$?;
	local m=${1:-teh ende.};
	echo "$AMI_PROG: $m" >&2;
	[ -z "$2" ] && exit $s || exit $2;
}
# uniform debugging
function debug() {
	[ $AMI_DBG -eq 1 ] || return;
	[ -n "$1" ] && echo "## "$@ >&2 || true;
}
# because of load, meh
export -f debug
# itsybitsy de bugging
function settings() {
	debug && {
		for v in AMI_PROG AMI_VERSION AMI AMI_MDIR AMI_LIBD AMI_ETCD AMI_CMDP AMI_VARS AMI_HELP AMI_HOME AMI_GITD AMI_SVND AMI_AURD AMI_ARCH AMI_CWD; do
			echo "## $v = ${!v}";
		done
	} >&2
}
# blah blah blah
function msg() {
	echo "# "$@;
}
function errmsg() {
	echo "# "$@ >&2;
}
# Usage:
function usage() {
	msg "'$AMI_PROG cmds' to list available <cmd>s.";
	echo "Usage: $AMI_PROG [OPTS] <cmd> [OPTS] [ARGS]";
	exit 3;
}
# trivial
function cmds() {
	ls -1 "$AMI_CMDP";
}

function runcmd() {
	local cmd=$1;
	shift
	debug "runcmd() $cmd: '$*'.";
	bash "$AMI_CMDP/$cmd" "$@";
}

function load() {
	local path;
	debug "load() $*.";
	case $1 in
		etc)
			path=$AMI_ETCD ;;
		lib)
			path=$AMI_LIBD ;;
		*)
			return ;;
	esac
	shift
	[ -n "$1" ] || return;
	path=$path/$1;
	[ -f "$path" ] && {
		debug "load() $path.";
		. $path $path;
	}
}

# lulz
export -f load

function dbgargs() {
	debug && {
		echo -n "## dbgargs()";
		for a in "$@"; do
			echo " \"$a\"";
		done
		echo;
	} >&2
}
