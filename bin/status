#!/bin/bash

load lib ami
load etc init # svn...

function status_ami() {
	local d="$AMI_MDIR";
	[ -d "$d/.git" ] && {
		local cmd="git status -sbu";
		echo "# $AMI_PROG status ami";
		GIT_DIR="$d/.git" GIT_WORK_TREE="$d" $cmd;
	} || return;
}

function status_svn() {
	local d="$AMI_SVND";
	local p=${1:-*};
	[ -d "$d" ] && echo "# $AMI_PROG status svn $p" || return;
	[ "$p" = "*" ] && {
		for r in $SVN_REPOS; do
			[ -d "$d/$r/.svn" ] &&
			  echo -n "# $r: "
#			  ( cd "$d" && svn status --depth=empty "$r"; )
			  ( cd "$d/$r" && svn status -u -v | grep -v "/" | sort -g; )
		done
		# this shouldn't fail, but...
		true
	} || {
		for r in $SVN_REPOS; do
			[ -d "$d/$r/$p/.svn" ] &&
			  ( cd "$d/$r/$p" && svn status -v | sort -gr; )
		done
	}
}

function status_git() {
	local d="$AMI_GITD";
	local p="*";
	local tagopts="-l";
	local bchopts="^\*";
	[ -n "$1" ] && {
		p="$1";
		tagopts="-l *#$1";
		bchopts="p/$1/";
	}
	[ -d "$d/.git" ] && echo "# $AMI_PROG status git $p" || return;
	export GIT_DIR="$d/.git";
	export GIT_WORK_TREE="$d";
	# could we count lines of 'status -s' and make it as "nice" as status_aur?
	git branch -v --color=always | grep $bchopts;
	git status -s;
	git tag $tagopts | sort -Vr;
	export -n GIT_DIR;
	export -n GIT_WORK_TREE;
}

function status_aur() {
	local d="$AMI_AURD"
	local p=${1:-*}
	[ -d "$d" ] && {
		echo "# $AMI_PROG status aur $p";
		local l=$(tput lines)
		cd $d && {
			# sorting by time may not be THAT reliable; BUT close eenuf
			[ "$p" = "*" ] && {
				for dir in $(ls -ctd * | head -n $(($l-3))); do
					ls -t1 $dir/*.tar.gz 2>/dev/null | head -n 1 ;
				done
				echo "[...]";
			} || {
				ls -tl $p/*.tar.gz 2>/dev/null | sed 's/'$p'-//g';
			}
		} | sed 's,^[^/]*/\(.*\)\.tar\.gz,\1,g'
	}
}

function status_usage() {
	msg "'$AMI_PROG status git' is default.";
	echo "Usage: $AMI_PROG status [ami]|[aur [pkg]|git [pkg]|svn [pkg]|all]";
	exit 3;
}

# main()
case $1 in
	-h)
			status_usage ;;
	all)
			shift
			status_aur $*
			status_git $*
			status_svn $*
			;;
	ami)
			status_ami ;;
	svn)
			shift
			status_svn $* ;;
	git)
			shift
			status_git $* ;;
	aur)
			shift
			status_aur $* ;;
	*)
#			shift
			status_git $* ;;
esac
