#!/bin/bash

load etc ami
load etc init # svn...

function status_ami() {
	local agitd="$AMI_MDIR/.git"
	[ -d "$agitd" ] && {
		echo "# $AMI_PROG status ami"
		GIT_DIR="$agitd" GIT_WORK_TREE="$AMI_MDIR" git status -s -b;
	}
}

function status_svn() {
	local d="$AMI_SVND"
	local p=${1:-*}
	shift
	# we should prolly be both smarter here and in regards to $p since it may be "unpresent"
	# TOFIX: but for now this shall dooo... eh, not really, bah.
	local reps=${@:-$SVN_REPOS}
	# TODO: if p!* check in which repo queried pkg is...
	[ -d "$d" ] && echo "# $AMI_PROG status svn $p"
	for r in $reps; do
		[ -d "$d/$r/.svn" ] && {
			( cd $d && {
				echo "# REPO(${r}): updates";
				svn status -u "$r";
				echo "# REPO(${r}): ptrunks";
				svn status -v "$r/"$p"/trunk/PKGBUILD";
			} )
		}
	done
}

function status_git() {
	local agitd="$AMI_GITD/.git"
	[ -d "$agitd" ] && {
		echo "# $AMI_PROG status git"
		GIT_DIR="$agitd" GIT_WORK_TREE="$AMI_GITD" git branch -v ;
		GIT_DIR="$agitd" GIT_WORK_TREE="$AMI_GITD" git status -s ;
	}
}

function status_aur() {
	local d="$AMI_AURD"
	local p=${1:-*}
	[ -d "$d" ] && {
		echo "# $AMI_PROG status aur $p";
		cd $d && {
			for dir in $p; do
				# sorting by time may not be THAT reliable; BUT close eenuf
				ls -t1 $dir/*.tar.gz 2>/dev/null | head -n 1 ;
			done
		} | sed 's,^[^/]*/\(.*\)\.tar\.gz,\1,g'
	}
}

# main()
case $1 in
	-h)
			echo "# '$AMI_PROG status git' is default"
			echo "Usage: $AMI_PROG status [ami|svn [pkg]|aur [pkg]|git|all]" ;;
	all)
			shift
			status_ami
			status_svn "$*"
			status_aur "$*"
			status_git
			;;
	ami)
			status_ami ;;
	svn)
			shift
			status_svn "$*" ;;
	git)
			status_git ;;
	aur)
			shift
			status_aur "$*" ;;
	*)
			status_git ;;
esac
