#!/bin/bash

load etc ami
load etc init # SVN_
load lib svn

function svn_get() {
	local d="$AMI_SVND"
	for r in $SVN_REPOS; do
		[ -d "$d/$r/.svn" ] && {
			echo "# $AMI_PROG svn get $r/$1";
			cd "$d/$r" && svn update $1 ;
		}
	done
}

function svn_gets() {
	[ -z "$1" ] && svn_usage && return
	for p in $*; do
		svn_get $p
	done
}

function svn_get_logs() {
	[ -z "$1" ] && svn_usage && return
	local log_file
	# investigate this
	for n in rdata didx index iidx; do
		type -t $n;
	done
	# trash da place
	cd $AMI_CWD
	for r in $SVN_REPOS; do
		log_file=$(svn_log $r $1)
		[ -s "$log_file" ] && {
			# but what convention if we choose to $(use) it $pkg-$repo-log (see lib/svn:svn_log)
			echo "$log_file";
			# TODO here we could use autolimiting on the svn_proc_log since ~10 is a screenful already and on svn_import we can turn off limiting.
			cat "$log_file" | svn_proc_log | svn_collect_log prnsomerevs $2 >&2;
			true # awkward
		} || {
			echo "# $r/$1 log_file($log_file) empty (hmmmm)" >&2;
		}
	done
}

function svn_gen_fi() {
	[ -z "$1" ] && svn_usage && return
	local pkg=$1
	local log_filez
	cd $AMI_CWD
	log_filez=$(svn_get_logs $pkg)
	for f in $log_filez ; do
		# tofix, sillidiadem
		repo=$(echo $f | sed "s,-log,,g;s,$pkg-,,g")
		echo "# svn_gen_fi() repo($repo) pkg($pkg)" >&2;
		cat $f | svn_proc_log | svn_collect_log fast-import $repo $pkg
		# && cd $AMI_GITD && cat /home/ypb/src/AMI/ami/tmp/tix/fast-imps | git fast-import --date-format=rfc2822 # anywayz
	done
}

function svn_usage() {
	echo "# '$AMI_PROG svn get <pkg>' is default"
	echo "Usage: $AMI_PROG svn [get|log|import] <pkg>"
}

# main()
case $1 in
	-h)
			svn_usage ;;
	get)
			shift
			svn_gets $* ;;
	log)
			shift
			svn_get_logs $* ;;
	import)
			shift
			svn_gen_fi $* ;;
	*)
			# damn duplicity... olmoust...
			svn_gets $* ;;
esac
