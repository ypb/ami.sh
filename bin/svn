#!/bin/bash

load lib ami
#load etc init # SVN_
load lib svn

function svn_get() {
	local d="$AMI_SVND"
	for r in $SVN_REPOS; do
		[ -d "$d/$r/.svn" ] && {
			msg "$AMI_PROG svn get $r/$1.";
			cd "$d/$r" && svn update $1 ;
		}
	done
}

function svn_gets() {
	[ -z "$1" ] && svn_usage;
	for p in $*; do
		svn_get $p
	done
}

# svn_print_log() prints log(s, i wish) for $1 pkg; optional $2 param
# orders and limits number of revisions printed (0: no limit, <0: starting
# from "first" rev i.e. opposite to svn convention, >0: from "last")
# default is to limit to 5 revisions
function svn_print_log() {
	[ -z "$1" ] && svn_usage;
	local pkg="$1"
	local log_file
	local repos=$(svn_exists $pkg)
	# perhaps svn_get here too? hmmm...
	[ -z "$repos" ] && {
		repos="$SVN_REPOS";
	}
	# trash da place
	local logdir=$AMI_TEMP/imports/svn/$pkg
	mkdir -p $logdir && cd $logdir || die "cd $logdir failure." 1;
	# TODO... more sophisticated i.e. KNOW current rev and adjust cache
	for r in $repos; do
		log_file=$(svn_log $r $pkg) # $rev...
		[ -n "$log_file" ] && {
			[ -s "$log_file" ] && {
				cat "$log_file" | svn_collect_log_to prnsomerevs ${2:-5};
			} || {
				errmsg "$r/$pkg log_file($log_file) empty (hmmmm).";
			}
		}
	done
	popd 2>/dev/null 1>&2;
	# FIXed... creates empty $logd ir... even if...
	[ $(ls $logdir | wc -l) = "0" ] && rmdir $logdir;
}

function svn_usage() {
	msg "'$AMI_PROG svn get <pkg>' is default.";
	echo "Usage: $AMI_PROG svn [get|log] <pkg>";
	exit 3;
}

# main()
case $1 in
	-h)
			svn_usage ;;
	get)
			shift
			svn_gets $* ;;
	log)
			shift
			svn_print_log $* ;;
	*)
			# damn duplicity... olmoust...
			svn_gets $* ;;
esac
