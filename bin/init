#!/bin/bash

load lib ami
load etc $(basename $0)

function init_svn() {
	local d="$AMI_SVND"
	[ -d "$d" ] || {
		mkdir -p "$d" && msg "init_svn() mkdir -p $d.";
	}
	for r in $SVN_REPOS; do
		[ -d "$d/$r/.svn" ] || {
			msg "init_svn() repo: $r.";
			cd "$d" && svn checkout --depth=empty svn://$SVN_SERVER/$r ;
		}
	done
}

function init_git() {
	local d="$AMI_GITD"
	[ -d "$d" ] || {
		mkdir -p "$d" && msg "init_git() mkdir -p $d.";
	}
	[ -d "$d/.git" ] || {
		msg "init_git().";
		cd "$d" && git init &&
		  cp $MASTER_README README.md &&
		  echo $AMI_VERSION >> README.md &&
		  git add . && git commit -m "init";
	}
}

function init_cache() {
	for d in "$AMI_AURD" "$AMI_ARCH" "$AMI_TEMP/imports/aur" "$AMI_TEMP/imports/svn"; do
		[ -d "$d" ] || {
			mkdir -p "$d" && msg "init_caches() mkdir -p $d.";
		}
	done
}

function init_pkg() {
	local d="$PCM_SHARE"
	[ "$1" = "list" ] && {
		shift
		local o=${1:--1}
		cd $d && ls $o PKGBUILD.proto PKGBUILD-*.proto
		return
	}
	local p=$([ -z "$1" ] && echo PKGBUILD || echo PKGBUILD-$1)
	# that's too ob-scyooree...
#	echo $AMI_CWD $(pwd)
	cd $AMI_CWD && cp -i $d/$p.proto PKGBUILD
#	echo "WTF($d/$p)"
}

function init_usage() {
	msg "'$AMI_PROG init *&~pkg' is default.";
	echo "Usage: $AMI_PROG init [svn|git|cache|pkg]";
	exit 3;
}

# main()
case $1 in
	-h)
			init_usage ;;
	svn)
			init_svn ;;
	git)
			init_git ;;
	cache)
			init_cache ;;
	pkg)
			shift
			init_pkg $* ;;
	*)
			init_svn
			init_git
			init_cache ;;
esac
