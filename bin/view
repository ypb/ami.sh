#!/bin/bash

load lib ami
load etc general # GIT_VIEWER
# perhaps move this into respective funs?
load lib svn # svn_exists
load lib aur # aur_exists

function view_git() {
	cd $AMI_GITD &&
	  exec $GIT_VIEWER $@;
}

function view_svn() {
	[ -z "$1" ] && { cd $AMI_SVND && ls -d1 */* | sort; return; }
	local pkg="$1";
	local rps=($(svn_exists $pkg));
	debug "${#rps[*]}'${rps[@]}'";
	[ ${#rps[*]} -gt 0 ] || die "view_svn() there is no '$pkg' package.";
	# bug in the making, taking the frst one...
	cat "$AMI_SVND/${rps[0]}/$pkg/trunk/PKGBUILD";
	# or we could show repos/foo or TODO: $2...
	# $3 revision?
}

function view_aur() {
	# more useless but be consistent with view_svn()
	[ -z "$1" ] && { cd $AMI_AURD && ls -1 | sort | sed 's,^,aur/,g'; return; }
	# [ -n "$1" ] || { runcmd status aur; return; }
	local pkg="$1";
	local vrs=($(aur_exists $pkg));
	[ ${#vrs[*]} -gt 0 ] || die "view_aur() there is no '$pkg' package.";
	debug "${#vrs[*]}'${vrs[@]}'";
	# same thing... using the last one...
	tar xzf ${vrs[-1]} $pkg/PKGBUILD -O;
	# TODO... switch on $2 version?
}

function view_usage() {
	msg "'$AMI_PROG view git' is default.";
	echo "Usage: $AMI_PROG view [git [tigargs]|svn [pkg]|aur [pkg]|all]";
	exit 3;
}

# main()
case $1 in
	-h)
			view_usage ;;
	git)
			shift
			view_git $* ;;
	svn)
			shift
			view_svn $* ;;
	aur)
			shift
			view_aur $* ;;
	all)
			{ view_aur;
			  view_svn; } | sed 's,^\([^/]*\)/\(.*\)$,\2/\1,g' | sort ;;
	*)
			view_git $* ;;
esac
