#!/bin/bash

load etc ami
#settings
load lib ami # runcmd...
load lib $(basename $0)

#dbgargs "$@"

function import_aur() {
	echo "via AUR"
	echo "AUR import not really implemented YET, 'aur get'ing it..."
	runcmd aur get $pkg
}
# NOT nice $pkg global...
function import_svn() {
	echo "via Arch Linux SVN"
	echo "SVN import ALMOST really implemented, kabloom!"
	local b="p/$pkg/arch"
	runcmd status git | grep -q "$b" && die 234 "# $b already present"
	local fi_file=$(runcmd svn import $pkg)
	[ -s "$fi_file" ] && {
		cd $AMI_GITD && cat "$fi_file" | git fast-import --date-format=rfc2822;
		# && rm -f "$fi_file";
		# leaving for now, but it's expandable as long as we leave svn_log and
		# svn_export_rev files behind during 'svn import'
	} || {
		echo "# empty $fi_file (impossible, but TRUE)";
		rm -f "$fi_file";
	}
}

function import() {
	echo -n "# importing $pkg "
	case $1 in
		aur)
			import_aur ;;
		svn)
			import_svn ;;
		*)
			import_aur ;;
	esac
}

function import_usage() {
	echo "# '$AMI_PROG import <pkg> aur' is default"
	echo "Usage: $AMI_PROG import <pkg> [svn|aur]"
}

# main()
case $1 in
	-h)
			import_usage ;;
	*)
			pkg=$1
			shift
			[ -n "$pkg" ] &&
				{ import $* ; } ||
				import_usage
			;;
esac
