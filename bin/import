#!/bin/bash

load etc ami
#settings
load lib ami # runcmd...
load lib $(basename $0)
load lib svn

#dbgargs "$@"

function import_aur() {
	echo "via AUR"
	echo "AUR import not really implemented YET, 'aur get'ing it..."
	runcmd aur get $pkg
}
# NOT nice $pkg global...
function import_svn() {
	echo "via Arch Linux SVN"
	echo "SVN import ALMOST really implemented, kabloom!"
	local b="p/$pkg/arch"
	runcmd status git | grep -q "$b" && die 234 "# $b already present"
	local repos=($(svn_exists $pkg))
	# perhaps svn_get here too? hmmm...
	[ "${#repos[*]}" -eq 0 ] && {
		runcmd svn get $pkg
	}
	repos=($(svn_exists $pkg))
	[ "${#repos[*]}" -eq 0 ] && die 235 "# it appears there is no $pkg package in Arch (${repos[@]})"
	# TODO?: find (if it exists) and import all of history besides present "location"
	[ "${#repos[*]}" -gt 1 ] && die 236 "# $pkg exists in both repos (IM-possible!)"
	# trash da place
	local impdir=$AMI_TEMP/imports/svn/$pkg
	mkdir -p $impdir && cd $impdir || die 1 "# cd $impdir failure"
	local fi_file="fast-import"
	rm -f $fi_file
	local log_file
	for r in ${repos[@]}; do
		log_file=$(svn_log $r $pkg)
		[ -z "$log_file" ] && continue
		echo "# (re-)generating GIT fast-import file for pkg($pkg) of repo($r)";
		cat $log_file | svn_collect_log_to fast-import $r $pkg $fi_file
	done
	# echo "# Importing into GIT" >&2;
	[ ! -s "$fi_file" ] && {
		echo "# empty $fi_file (impossible, but TRUE)";
		rm -f "$fi_file";
	} || {
		cd $AMI_GITD && cat "$impdir/$fi_file" | git fast-import --quiet --date-format=rfc2822;
		# && rm -f "$fi_file";
		# leaving for now, but it's expandable as long as we leave svn_log and
		# svn_export_rev files behind during 'svn import'
	}
	# clean up... but leave svn_export cache for sure, no point in redownloading
	# and they pack good.
	# rm -f $impdir/$fi_file;
}

function import() {
	echo -n "# importing $pkg "
	case $1 in
		aur)
			import_aur ;;
		svn)
			import_svn ;;
		*)
			import_aur ;;
	esac
}

function import_usage() {
	echo "# '$AMI_PROG import <pkg> aur' is default"
	echo "Usage: $AMI_PROG import <pkg> [svn|aur]"
}

# main()
case $1 in
	-h)
			import_usage ;;
	*)
			pkg=$1
			shift
			[ -z "$pkg" ] &&
			  import_usage ||
			  import $* ;;
esac
